name: Docker Build and Publish

on:
  push:
    branches:
      - master
    tags:
      - v*
env:
  IMAGE_NAME: ${{ secrets.DOCKER_USER }}/meitav-alternate-view

jobs:
  quality_check:
    name: Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-root

      - name: Run quality checks
        run: |
          echo "--- Running Quality Checks ---"
          poetry run ruff check src
          poetry run ruff format --check src
          poetry run mypy src
          poetry run pytest
          echo "--- Quality Checks Passed! ---"


  build_and_push:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    needs: quality_check  # Run only if quality checks passed

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          flavor: |
            latest=true
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
